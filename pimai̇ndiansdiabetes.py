# -*- coding: utf-8 -*-
"""PimaÄ°ndiansDiabetes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ycExMLU4PQjTw2VhoJr-aeJoHb4hQQ48
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from sklearn.metrics import accuracy_score,confusion_matrix,precision_score
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB,GaussianNB
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.ensemble import RandomForestClassifier

data=pd.read_csv("/content/diabetes.csv")

data.head()

data.describe()

data.info()

data.isnull().sum()

data["Outcome"].value_counts()

data.shape

data.dtypes

x=data.drop("Outcome",axis=1)
y=data["Outcome"]

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=64)

rfc=RandomForestClassifier(random_state=50, n_jobs=-1, criterion="entropy" ,max_depth=8,
                                       n_estimators=100, oob_score=True)

rfc.fit(x_train,y_train)

y_pred = rfc.predict(x_test)

print('Model accuracy score :',accuracy_score(y_test, y_pred))

svc=SVC(C=3,kernel="linear",gamma=7)

svc.fit(x_train,y_train)

pred = svc.predict(x_test)

print('Model accuracy score :',accuracy_score(y_test, pred))

mnb=MultinomialNB(force_alpha=True,fit_prior=False)
mnb.fit(x_train,y_train)

predict=mnb.predict(x_test)

print('Model accuracy score :',accuracy_score(y_test, predict))

lr=LogisticRegression(C=5,penalty="l2",random_state=52,solver="lbfgs",verbose=10,n_jobs=5)
lr.fit(x_train,y_train)

prediction=lr.predict(x_test)

print('Model accuracy score :',accuracy_score(y_test, prediction))